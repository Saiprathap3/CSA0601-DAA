#include <stdio.h>

#define INF 999999
#define MAX 20

int tsp(int cost[MAX][MAX], int mask, int pos, int n, int dp[MAX][1 << MAX]) {
    if (mask == ((1 << n) - 1)) {
        return cost[pos][0];
    }

    if (dp[pos][mask] != -1) {
        return dp[pos][mask];
    }

    int answer = INF;

    for (int city = 0; city < n; city++) {
        if ((mask & (1 << city)) == 0) {
            int newAnswer = cost[pos][city] + tsp(cost, mask | (1 << city), city, n, dp);
            answer = (answer < newAnswer) ? answer : newAnswer;
        }
    }

    dp[pos][mask] = answer;
    return answer;
}

int main() {
    int n;
    int cost[MAX][MAX];
    printf("Enter the number of cities: ");
    scanf("%d", &n);

    printf("Enter the cost matrix:\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            scanf("%d", &cost[i][j]);
        }
    }

    int dp[MAX][1 << MAX];
    for (int i = 0; i < MAX; i++) {
        for (int j = 0; j < (1 << MAX); j++) {
            dp[i][j] = -1;
        }
    }

    printf("The minimum cost is: %d\n", tsp(cost, 1, 0, n, dp));

    return 0;
}
